[{"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/index.js":"1","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/App.js":"2","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/common/SearchPage.js":"3","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/common/Home.js":"4","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/GetEpisodes.js":"5","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/common/NavBar.js":"6","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/PodcastIndex.js":"7","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/auth/Login.js":"8","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/GetPodcast.js":"9","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/EpisodeCard.js":"10","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/SearchCard.js":"11","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/lib/SpotifyAuth.js":"12","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/PodcastCard.js":"13"},{"size":221,"mtime":1630438031124,"results":"14","hashOfConfig":"15"},{"size":862,"mtime":1630766582662,"results":"16","hashOfConfig":"15"},{"size":1149,"mtime":1630735915336,"results":"17","hashOfConfig":"15"},{"size":347,"mtime":1630735915336,"results":"18","hashOfConfig":"15"},{"size":2632,"mtime":1630766582663,"results":"19","hashOfConfig":"15"},{"size":1756,"mtime":1630742307188,"results":"20","hashOfConfig":"15"},{"size":186,"mtime":1630438031124,"results":"21","hashOfConfig":"15"},{"size":150,"mtime":1630438031122,"results":"22","hashOfConfig":"15"},{"size":1289,"mtime":1630766582663,"results":"23","hashOfConfig":"15"},{"size":1410,"mtime":1630766582663,"results":"24","hashOfConfig":"15"},{"size":1127,"mtime":1630766595382,"results":"25","hashOfConfig":"15"},{"size":2088,"mtime":1630735915338,"results":"26","hashOfConfig":"15"},{"size":1678,"mtime":1630766582663,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"c8m09p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/index.js",[],["59","60"],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/App.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/common/SearchPage.js",["61","62"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport SearchCard from '../components/SearchCard'\nimport '../styles/SearchPage.css'\n\nfunction SearchPage() {\n  const [searchAddress, setSearchAddress] = useState()\n  const [results, setResults] = useState({})\n  const token = localStorage.getItem('accessToken')\n\n  \n  const handleSearch = () => {\n    let string = window.location.pathname.substring(9)\n\n    axios\n      .get(\n        `https://api.spotify.com/v1/search?q=${string}&type=show&market=US&limit=25&offset=0`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      )\n      .then((response) => {\n        setResults(response.data.shows)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching podcasts', err)\n      })\n    setSearchAddress(window.location.href)\n}\n\nuseEffect(() => {\n    handleSearch()\n}, [window.location.href])\n\n\n\n  return (\n    <div className=\"results-page\">\n      {results?.items\n        ? results.items.map((item) => <SearchCard key={item[0]} {...item} />)\n        : null}\n    </div>\n  )\n}\n\nexport default SearchPage","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/common/Home.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/GetEpisodes.js",["63","64","65","66"],"import React, { useEffect, useState } from 'react'\n// import { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport EpisodeCard from './EpisodeCard'\nimport GetPodcast from './GetPodcast'\nimport '../styles/GetEpisodes.css'\n\nconst podcastEndpoint =\n  'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'\n\nconst episodesEndpoint =\n  'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'\n\n// export const episodesEndpoint = (id) => {\n//   //   //   // this isn't working at the moment, but use the endpoint and sample showID and you can see results once taken out of the function\n//   //   //   // define show id and use the podcast ID to get the different shows\n//   //   //   // sample showID: 4Jgtgr4mHXNDyLldHkfEMz\n//   //   let podcastId = GetPodcast.item.id\n//   //   let id = podcastId\n//   // return `https://api.spotify.com/v1/shows/${id}/episodes`\n// }\n\nconst GetEpisodes = () => {\n  // const { id } = useParams()\n  // const history = useHistory()\n  const [token, setToken] = useState('')\n  const [data, setData] = useState({})\n  const [state, setState] = React.useState({ podcast: null })\n\n  useEffect(() => {\n    handleGetEpisodes()\n  }, [token])\n\n  // getEpisodesfromApi = async () => {\n  //   try {\n  //     const res = await getSingleShowEpisodes(id)\n  //     setState({ podcast: res.data })\n  //     // history.push('podcast/:id/episodes')\n  //   } catch (err) {\n  //     console.error(`An error occured fetching cheese ${id}`, err)\n  //   }\n  // }\n\n  console.log('state is', state)\n\n  useEffect(() => {\n    if (localStorage.getItem('accessToken')) {\n      setToken(localStorage.getItem('accessToken'))\n    }\n  }, [])\n\n  const handleGetEpisodes = () => {\n    axios\n      .get(podcastEndpoint, {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      })\n      .then((response) => {\n        setData(response.data)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching episodes', err)\n      })\n  }\n\n  return (\n    <div className=\"episodes-container\">\n      {/* <button onClick={handleGetEpisodes}>Get Episodes</button> */}\n      <div className=\"episodes-list\">\n        {data?.items\n          ? data.items.map((item) => <EpisodeCard key={item.name} {...item} />)\n          : null}\n      </div>\n    </div>\n  )\n}\n\nexport default GetEpisodes\n\n// use this to get the ID out from the url and get the podcast episodes\n\n// import React from 'react'\n// import { useParams } from 'react-router-dom'\n\n// const GetEpisodes = () => {\n//   const { id } = useParams()\n//   return <p>{id}</p>\n// }\n\n// export default GetEpisodes\n","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/common/NavBar.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/PodcastIndex.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/auth/Login.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/GetPodcast.js",["67","68","69"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport GetEpisodes, { episodesEndpoint } from './GetEpisodes'\n\nimport PodcastCard from './PodcastCard'\n\nconst podcastEndpoint = 'https://api.spotify.com/v1/me/shows'\n\n// const episodesEndpoint =\n//   'https://api.spotify.com/v1/shows/7qZAVw03FuurfYnWIWwkHY/episodes'\n\nconst GetPodcast = () => {\n  const [token, setToken] = useState('')\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    if (localStorage.getItem('accessToken')) {\n      setToken(localStorage.getItem('accessToken'))\n    }\n  }, [])\n\n  useEffect(() => {\n    handleGetPodcasts()\n  }, [token])\n\n  const handleGetPodcasts = () => {\n    axios\n      .get(podcastEndpoint, {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      })\n      .then((response) => {\n        setData(response.data)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching podcasts', err)\n      })\n  }\n\n  return (\n    <div className=\"podcasts is-flex\">\n      {/* <button onClick={handleGetPodcasts}>Get Podcasts</button> */}\n      {data?.items\n        ? data.items.map((item) => (\n            <PodcastCard key={item.show.name} {...item} />\n          ))\n        : null}\n    </div>\n  )\n}\n\nexport default GetPodcast\n","/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/EpisodeCard.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/SearchCard.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/lib/SpotifyAuth.js",[],"/Users/jamesgore/Coding/SEI/group-work/spotify-podcast-app/src/components/PodcastCard.js",["70","71","72"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport '../styles/PodcastCard.css'\nimport { useHistory } from 'react-router-dom'\n\n// 1 way of doing it\n// const\n// Export default function functionName({ match}) {\n// Export default function functionName({ match}) {\n\nconst PodcastCard = (props) => {\n  const name = props.show.name\n  const publisher = props.show.publisher\n  const total_episodes = props.show.total_episodes\n  const image = props.show.images[1].url\n  const id = props.show.id\n  // destructuring\n  // add an object here\n  // console.log('this is props in podcast card', props) // to display what's inside the the object\n\n  return (\n    // add in an object in the link\n    <div className=\"column is-one-quarter-desktop is-one-third-tablet is-half-mobile\">\n      <Link to={`/podcast/${id}`}>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h4 className=\"card-header-title\">{name}</h4>\n          </div>\n\n          <div className=\"card-image\">\n            <figure className=\"image is-1by1\">\n              {/* <Link to='episodes link'> */}\n              <img\n                src={image}\n                alt={name}\n                loading=\"lazy\"\n                width=\"200\"\n                hieght=\"200\"\n                // onClick={function}\n              ></img>\n              {/* </Link> */}\n            </figure>\n          </div>\n\n          <div className=\"card-content\">\n            <h5>Number of Episodes: {total_episodes}</h5>\n            <h5>The Publisher is: {publisher}</h5>\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default PodcastCard\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":35,"column":4,"nodeType":"83","endLine":35,"endColumn":26,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":18},{"ruleId":"77","severity":1,"message":"86","line":11,"column":7,"nodeType":"79","messageId":"80","endLine":11,"endColumn":23},{"ruleId":"77","severity":1,"message":"87","line":28,"column":17,"nodeType":"79","messageId":"80","endLine":28,"endColumn":25},{"ruleId":"81","severity":1,"message":"88","line":32,"column":6,"nodeType":"83","endLine":32,"endColumn":13,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"90","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":19},{"ruleId":"77","severity":1,"message":"91","line":3,"column":23,"nodeType":"79","messageId":"80","endLine":3,"endColumn":39},{"ruleId":"81","severity":1,"message":"92","line":24,"column":6,"nodeType":"83","endLine":24,"endColumn":13,"suggestions":"93"},{"ruleId":"77","severity":1,"message":"94","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":19},{"ruleId":"77","severity":1,"message":"95","line":3,"column":21,"nodeType":"79","messageId":"80","endLine":3,"endColumn":29},{"ruleId":"77","severity":1,"message":"96","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":20},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'searchAddress' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["99"],"'GetPodcast' is defined but never used.","'episodesEndpoint' is assigned a value but never used.","'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleGetEpisodes'. Either include it or remove the dependency array.",["100"],"'GetEpisodes' is defined but never used.","'episodesEndpoint' is defined but never used.","React Hook useEffect has a missing dependency: 'handleGetPodcasts'. Either include it or remove the dependency array.",["101"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [handleSearch]",{"range":"108","text":"109"},"Update the dependencies array to be: [handleGetEpisodes, token]",{"range":"110","text":"111"},"Update the dependencies array to be: [handleGetPodcasts, token]",{"range":"112","text":"113"},[917,939],"[handleSearch]",[1201,1208],"[handleGetEpisodes, token]",[637,644],"[handleGetPodcasts, token]"]