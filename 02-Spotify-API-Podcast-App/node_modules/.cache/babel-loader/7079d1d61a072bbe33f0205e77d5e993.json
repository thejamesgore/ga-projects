{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/common/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // import { useHistory } from 'react-router-dom'\n\nimport Login from '../auth/Login';\nimport { getAccessToken } from '../lib/SpotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  // const history = useHistory()\n  const [state, setState] = React.useState(null); // This is monitoring the URL so when it changes we land back on the page and can take the access token\n\n  useEffect(() => {\n    const urlToken = getAccessToken();\n    window.location.hash = ''; // removes the access token from the URL\n\n    console.log(`We now have an access token pulled from the url:`, urlToken);\n    const token = urlToken.access_token;\n    console.log(`The barer token is:`, token);\n\n    if (token) {\n      setState(token);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: state ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"you are logged in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this); // React.useEffect(() => {\n  //   SpotifyAuth()\n  // }, [])\n}; // const settingTokenInBrowser = async (e) => {\n//   try {\n//     const res = await setState(token)\n//     if (res.status === 200) {\n//       // callback()\n//       history.push('/podcast')\n//     }\n//   } catch (err) {\n//     console.error('Error setting bearer token', err)\n//   }\n// }\n// return settingTokenInBrowser\n// maybe have a setInterval function to\n// redirect to podcast page after 3s?\n\n\n_s(Home, \"fkdfczwZ0ursGZj/fOecNSC7G+w=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/common/Home.js"],"names":["React","useEffect","Login","getAccessToken","Home","state","setState","useState","urlToken","window","location","hash","console","log","token","access_token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,cAAT,QAA+B,oBAA/B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,IAAf,CAA1B,CAFiB,CAIjB;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,QAAQ,GAAGL,cAAc,EAA/B;AACAM,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,EAAvB,CAFc,CAEY;;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAa,kDAAb,EAAgEL,QAAhE;AACA,UAAMM,KAAK,GAAGN,QAAQ,CAACO,YAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAb,EAAmCC,KAAnC;;AACA,QAAIA,KAAJ,EAAW;AACTR,MAAAA,QAAQ,CAACQ,KAAD,CAAR;AACD;AACF,GATQ,EASN,EATM,CAAT;AAWA,sBAAO;AAAA,cAAUT,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAiC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP,CAhBiB,CAiBjB;AACA;AACA;AACD,CApBD,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;GApCMD,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react'\n// import { useHistory } from 'react-router-dom'\nimport Login from '../auth/Login'\nimport { getAccessToken } from '../lib/SpotifyAuth'\n\nconst Home = () => {\n  // const history = useHistory()\n  const [state, setState] = React.useState(null)\n\n  // This is monitoring the URL so when it changes we land back on the page and can take the access token\n  useEffect(() => {\n    const urlToken = getAccessToken()\n    window.location.hash = '' // removes the access token from the URL\n    console.log(`We now have an access token pulled from the url:`, urlToken)\n    const token = urlToken.access_token\n    console.log(`The barer token is:`, token)\n    if (token) {\n      setState(token)\n    }\n  }, [])\n\n  return <section>{state ? <h1>you are logged in!</h1> : <Login />}</section>\n  // React.useEffect(() => {\n  //   SpotifyAuth()\n  // }, [])\n}\n\n// const settingTokenInBrowser = async (e) => {\n//   try {\n//     const res = await setState(token)\n//     if (res.status === 200) {\n//       // callback()\n//       history.push('/podcast')\n//     }\n//   } catch (err) {\n//     console.error('Error setting bearer token', err)\n//   }\n// }\n// return settingTokenInBrowser\n\n// maybe have a setInterval function to\n// redirect to podcast page after 3s?\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}