{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/lib/SearchResults.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spaceDelimiter = '%20';\n\nfunction SearchResults({\n  passedSearchTerm\n}) {\n  _s();\n\n  var _data;\n\n  const [shows, setShows] = React.useState();\n  console.log(`This is the searchTerm`, {\n    passedSearchTerm\n  });\n  const token = localStorage.getItem('accessToken');\n\n  const getSearchResults = () => {\n    console.log(`Getting Search results`);\n    axios.get(`https://api.spotify.com/v1/search?q=${passedSearchTerm}&type=show&market=US&limit=10&offset=5`, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      console.log(response.shows);\n    }).catch(err => {\n      console.error('there was an error fetching podcasts', err);\n    });\n  };\n\n  if (token) {\n    getSearchResults();\n  }\n\n  console.log(`USER SEARCH RESULTS ðŸ‘‰`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ((_data = data) === null || _data === void 0 ? void 0 : _data.items) ? data.items.map(item => /*#__PURE__*/_jsxDEV(PodcastCard, { ...item\n    }, item.show.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchResults, \"aieXGrvhLeh77FHzNBvL8AONskE=\");\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/lib/SearchResults.js"],"names":["axios","spaceDelimiter","SearchResults","passedSearchTerm","shows","setShows","React","useState","console","log","token","localStorage","getItem","getSearchResults","get","headers","Authorization","then","response","catch","err","error","data","items","map","item","show","name"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,KAAvB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA6C;AAAA;;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,KAAK,CAACC,QAAN,EAA1B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb,EAAsC;AAAEN,IAAAA;AAAF,GAAtC;AAEA,QAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAd;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb;AACAT,IAAAA,KAAK,CACFc,GADH,CAEK,uCAAsCX,gBAAiB,wCAF5D,EAGI;AACEY,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYN;AADpB;AADX,KAHJ,EASGO,IATH,CASSC,QAAD,IAAc;AAClBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACd,KAArB;AACD,KAXH,EAYGe,KAZH,CAYUC,GAAD,IAAS;AACdZ,MAAAA,OAAO,CAACa,KAAR,CAAc,sCAAd,EAAsDD,GAAtD;AACD,KAdH;AAeD,GAjBD;;AAmBA,MAAIV,KAAJ,EAAW;AACTG,IAAAA,gBAAgB;AACjB;;AAEDL,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb;AAEA,sBACE;AAAA,cACG,UAAAa,IAAI,UAAJ,sCAAMC,KAAN,IACGD,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBACb,QAAC,WAAD,OAAsCA;AAAtC,OAAkBA,IAAI,CAACC,IAAL,CAAUC,IAA5B;AAAA;AAAA;AAAA;AAAA,YADF,CADH,GAIG;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzCQzB,a;;KAAAA,a;AA2CT,eAAeA,aAAf","sourcesContent":["// import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst spaceDelimiter = '%20'\n\nfunction SearchResults({ passedSearchTerm }) {\n  const [shows, setShows] = React.useState()\n\n  console.log(`This is the searchTerm`, { passedSearchTerm })\n\n  const token = localStorage.getItem('accessToken')\n\n  const getSearchResults = () => {\n    console.log(`Getting Search results`)\n    axios\n      .get(\n        `https://api.spotify.com/v1/search?q=${passedSearchTerm}&type=show&market=US&limit=10&offset=5`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.shows)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching podcasts', err)\n      })\n  }\n\n  if (token) {\n    getSearchResults()\n  }\n\n  console.log(`USER SEARCH RESULTS ðŸ‘‰`)\n\n  return (\n    <div>\n      {data?.items\n        ? data.items.map((item) => (\n            <PodcastCard key={item.show.name} {...item} />\n          ))\n        : null}\n    </div>\n  )\n}\n\nexport default SearchResults\n"]},"metadata":{},"sourceType":"module"}