{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/components/PodcastIndex.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { getAllUserShows } from '../lib/SpotifyAuth';\nimport PodcastCard from './PodcastCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PodcastIndex = () => {\n  _s();\n\n  const [state, setState] = React.useState({\n    podcasts: []\n  }); // const [data, setData] = useState({}) - not sure if this is needed\n\n  const fetchPodcastsFromApi = async () => {\n    try {\n      const res = await getAllUserShows();\n      setState({\n        podcasts: res.data\n      });\n    } catch (err) {\n      console.error('An error occured fetching user podcasts', err);\n    }\n  }; // {error: {status: 400, message: \"Only valid bearer authentication supported\"}} - this is what needs to be resolved,\n  // could be an error with the way I'm calling the Api\n\n\n  React.useEffect(() => {\n    fetchPodcastsFromApi();\n  }, []);\n\n  if (state.podcasts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is the podcast page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.podcasts.map(podcast => /*#__PURE__*/_jsxDEV(PodcastCard, {\n        id: podcast.items.uri,\n        name: podcast.items.languages.en.name,\n        image: podcast.items.images\n      }, podcast.items.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PodcastIndex, \"A6TMn2Km03WyPLk4izgZv3YgoIU=\");\n\n_c = PodcastIndex;\nexport default PodcastIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastIndex\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/components/PodcastIndex.js"],"names":["React","getAllUserShows","PodcastCard","PodcastIndex","state","setState","useState","podcasts","fetchPodcastsFromApi","res","data","err","console","error","useEffect","length","map","podcast","items","uri","languages","en","name","images"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAA+B,oBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAf,CAA1B,CADyB,CAEzB;;AAEA,QAAMC,oBAAoB,GAAG,YAAY;AACvC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMR,eAAe,EAAjC;AACAI,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,QAAQ,EAAEE,GAAG,CAACC;AAAhB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAc,yCAAd,EAAyDF,GAAzD;AACD;AACF,GAPD,CAJyB,CAYzB;AACA;;;AAEAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBN,IAAAA,oBAAoB;AACrB,GAFD,EAEG,EAFH;;AAIA,MAAIJ,KAAK,CAACG,QAAN,CAAeQ,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGX,KAAK,CAACG,QAAN,CAAeS,GAAf,CAAoBC,OAAD,iBAClB,QAAC,WAAD;AAEE,QAAA,EAAE,EAAEA,OAAO,CAACC,KAAR,CAAcC,GAFpB;AAGE,QAAA,IAAI,EAAEF,OAAO,CAACC,KAAR,CAAcE,SAAd,CAAwBC,EAAxB,CAA2BC,IAHnC;AAIE,QAAA,KAAK,EAAEL,OAAO,CAACC,KAAR,CAAcK;AAJvB,SACON,OAAO,CAACC,KAAR,CAAcC,GADrB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtCD;;GAAMhB,Y;;KAAAA,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { getAllUserShows} from '../lib/SpotifyAuth'\nimport PodcastCard from './PodcastCard'\n\nconst PodcastIndex = () => {\n  const [state, setState] = React.useState({ podcasts: [] })\n  // const [data, setData] = useState({}) - not sure if this is needed\n\n  const fetchPodcastsFromApi = async () => {\n    try {\n      const res = await getAllUserShows()\n      setState({ podcasts: res.data })\n    } catch (err) {\n      console.error('An error occured fetching user podcasts', err)\n    }\n  }\n  // {error: {status: 400, message: \"Only valid bearer authentication supported\"}} - this is what needs to be resolved,\n  // could be an error with the way I'm calling the Api\n\n  React.useEffect(() => {\n    fetchPodcastsFromApi()\n  }, [])\n\n  if (state.podcasts.length === 0) {\n    return <p>Loading...</p>\n  }\n\n  return (\n    <section>\n      <h1>This is the podcast page</h1>\n      <div>\n        {state.podcasts.map((podcast) => (\n          <PodcastCard\n            key={podcast.items.uri}\n            id={podcast.items.uri}\n            name={podcast.items.languages.en.name}\n            image={podcast.items.images}\n          />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default PodcastIndex\n"]},"metadata":{},"sourceType":"module"}