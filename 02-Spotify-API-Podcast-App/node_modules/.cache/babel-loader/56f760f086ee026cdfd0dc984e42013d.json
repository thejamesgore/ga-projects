{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/components/GetEpisodes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useParams, useHistory } from 'react-router-dom'\n\nimport axios from 'axios';\nimport EpisodeCard from './EpisodeCard';\nimport GetPodcast from './GetPodcast';\nimport '../styles/GetEpisodes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst podcastEndpoint = 'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes';\nconst episodesEndpoint = 'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'; // export const episodesEndpoint = (id) => {\n//   //   //   // this isn't working at the moment, but use the endpoint and sample showID and you can see results once taken out of the function\n//   //   //   // define show id and use the podcast ID to get the different shows\n//   //   //   // sample showID: 4Jgtgr4mHXNDyLldHkfEMz\n//   //   let podcastId = GetPodcast.item.id\n//   //   let id = podcastId\n//   // return `https://api.spotify.com/v1/shows/${id}/episodes`\n// }\n\nconst GetEpisodes = () => {\n  _s();\n\n  // const { id } = useParams()\n  // const history = useHistory()\n  const [token, setToken] = useState('');\n  const [data, setData] = useState({});\n  const [state, setState] = React.useState({\n    podcast: null\n  }); // getEpisodesfromApi = async () => {\n  //   try {\n  //     const res = await getSingleShowEpisodes(id)\n  //     setState({ podcast: res.data })\n  //     history.push('podcast/:id/episodes')\n  //   } catch (err) {\n  //     console.error(`An error occured fetching cheese ${id}`, err)\n  //   }\n  // }\n\n  console.log('state is', state);\n  useEffect(() => {\n    if (localStorage.getItem('accessToken')) {\n      setToken(localStorage.getItem('accessToken'));\n    }\n  }, []);\n\n  const handleGetEpisodes = () => {\n    axios.get(podcastEndpoint, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      setData(response.data);\n    }).catch(err => {\n      console.error('there was an error fetching episodes', err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"episodes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetEpisodes,\n      children: \"Get Episodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"episodes-list\",\n      children: (data === null || data === void 0 ? void 0 : data.items) ? data.items.map(item => /*#__PURE__*/_jsxDEV(EpisodeCard, { ...item\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 38\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetEpisodes, \"jMqiotsavQP3LbSbqVisM7ytaL8=\");\n\n_c = GetEpisodes;\nexport default GetEpisodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetEpisodes\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/components/GetEpisodes.js"],"names":["React","useEffect","useState","axios","EpisodeCard","GetPodcast","podcastEndpoint","episodesEndpoint","GetEpisodes","token","setToken","data","setData","state","setState","podcast","console","log","localStorage","getItem","handleGetEpisodes","get","headers","Authorization","then","response","catch","err","error","items","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,2BAAP;;AAEA,MAAMC,eAAe,GACnB,kEADF;AAGA,MAAMC,gBAAgB,GACpB,kEADF,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACE,QAAN,CAAe;AAAEa,IAAAA,OAAO,EAAE;AAAX,GAAf,CAA1B,CALwB,CAOxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,KAAxB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvCT,MAAAA,QAAQ,CAACQ,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BjB,IAAAA,KAAK,CACFkB,GADH,CACOf,eADP,EACwB;AACpBgB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYd;AADpB;AADW,KADxB,EAMGe,IANH,CAMSC,QAAD,IAAc;AAClBb,MAAAA,OAAO,CAACa,QAAQ,CAACd,IAAV,CAAP;AACD,KARH,EASGe,KATH,CASUC,GAAD,IAAS;AACdX,MAAAA,OAAO,CAACY,KAAR,CAAc,sCAAd,EAAsDD,GAAtD;AACD,KAXH;AAYD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEP,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACG,CAAAT,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEkB,KAAN,IACGlB,IAAI,CAACkB,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBAAU,QAAC,WAAD,OAAiCA;AAAjC,SAAkBA,IAAI,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA,cAAzB,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlDD;;GAAMxB,W;;KAAAA,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport EpisodeCard from './EpisodeCard'\nimport GetPodcast from './GetPodcast'\nimport '../styles/GetEpisodes.css'\n\nconst podcastEndpoint =\n  'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'\n\nconst episodesEndpoint =\n  'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'\n\n// export const episodesEndpoint = (id) => {\n//   //   //   // this isn't working at the moment, but use the endpoint and sample showID and you can see results once taken out of the function\n//   //   //   // define show id and use the podcast ID to get the different shows\n//   //   //   // sample showID: 4Jgtgr4mHXNDyLldHkfEMz\n//   //   let podcastId = GetPodcast.item.id\n//   //   let id = podcastId\n//   // return `https://api.spotify.com/v1/shows/${id}/episodes`\n// }\n\nconst GetEpisodes = () => {\n  // const { id } = useParams()\n  // const history = useHistory()\n  const [token, setToken] = useState('')\n  const [data, setData] = useState({})\n  const [state, setState] = React.useState({ podcast: null })\n\n  // getEpisodesfromApi = async () => {\n  //   try {\n  //     const res = await getSingleShowEpisodes(id)\n  //     setState({ podcast: res.data })\n  //     history.push('podcast/:id/episodes')\n  //   } catch (err) {\n  //     console.error(`An error occured fetching cheese ${id}`, err)\n  //   }\n  // }\n\n  console.log('state is', state)\n\n  useEffect(() => {\n    if (localStorage.getItem('accessToken')) {\n      setToken(localStorage.getItem('accessToken'))\n    }\n  }, [])\n\n  const handleGetEpisodes = () => {\n    axios\n      .get(podcastEndpoint, {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      })\n      .then((response) => {\n        setData(response.data)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching episodes', err)\n      })\n  }\n\n  return (\n    <div className=\"episodes-container\">\n      <button onClick={handleGetEpisodes}>Get Episodes</button>\n      <div className=\"episodes-list\">\n        {data?.items\n          ? data.items.map((item) => <EpisodeCard key={item.name} {...item} />)\n          : null}\n      </div>\n    </div>\n  )\n}\n\nexport default GetEpisodes\n"]},"metadata":{},"sourceType":"module"}