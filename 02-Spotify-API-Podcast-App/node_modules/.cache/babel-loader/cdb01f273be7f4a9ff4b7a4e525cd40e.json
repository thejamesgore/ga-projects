{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/components/GetEpisodes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EpisodeCard from './EpisodeCard';\nimport GetPodcast from './GetPodcast';\nimport '../styles/GetEpisodes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst podcastEndpoint = 'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'; // const episodesEndpoint =\n//   'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'\n\nlet episodesEndpoint = () => {\n  // this isn't working at the moment, but use the endpoint and sample showID and you can see results once taken out of the function\n  // define show id and use the podcast ID to get the different shows\n  // sample showID: 4Jgtgr4mHXNDyLldHkfEMz\n  let podcastId = GetPodcast.item.id;\n  let showId = podcastId;\n  return `https://api.spotify.com/v1/shows/${showId}/episodes`;\n};\n\nconst GetEpisodes = () => {\n  _s();\n\n  const [token, setToken] = useState('');\n  const [data, setData] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem('accessToken')) {\n      setToken(localStorage.getItem('accessToken'));\n    }\n  }, []);\n\n  const handleGetEpisodes = () => {\n    axios.get(podcastEndpoint, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      setData(response.data);\n    }).catch(err => {\n      console.error('there was an error fetching episodes', err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"episodes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetEpisodes,\n      children: \"Get Episodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), (data === null || data === void 0 ? void 0 : data.items) ? data.items.map(item => /*#__PURE__*/_jsxDEV(EpisodeCard, { ...item\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 36\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetEpisodes, \"/Q+d7yKfN2IDV2wD/aRytZ9oNJI=\");\n\n_c = GetEpisodes;\nexport default GetEpisodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetEpisodes\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/components/GetEpisodes.js"],"names":["React","useEffect","useState","axios","EpisodeCard","GetPodcast","podcastEndpoint","episodesEndpoint","podcastId","item","id","showId","GetEpisodes","token","setToken","data","setData","localStorage","getItem","handleGetEpisodes","get","headers","Authorization","then","response","catch","err","console","error","items","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,2BAAP;;AAEA,MAAMC,eAAe,GACnB,kEADF,C,CAGA;AACA;;AAEA,IAAIC,gBAAgB,GAAG,MAAM;AAC3B;AAEA;AACA;AACA,MAAIC,SAAS,GAAGH,UAAU,CAACI,IAAX,CAAgBC,EAAhC;AACA,MAAIC,MAAM,GAAGH,SAAb;AACA,SAAQ,oCAAmCG,MAAO,WAAlD;AACD,CARD;;AAUA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvCJ,MAAAA,QAAQ,CAACG,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BhB,IAAAA,KAAK,CACFiB,GADH,CACOd,eADP,EACwB;AACpBe,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYT;AADpB;AADW,KADxB,EAMGU,IANH,CAMSC,QAAD,IAAc;AAClBR,MAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP;AACD,KARH,EASGU,KATH,CASUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAc,sCAAd,EAAsDF,GAAtD;AACD,KAXH;AAYD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEP,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEc,KAAN,IACGd,IAAI,CAACc,KAAL,CAAWC,GAAX,CAAgBrB,IAAD,iBAAU,QAAC,WAAD,OAAiCA;AAAjC,OAAkBA,IAAI,CAACsB,IAAvB;AAAA;AAAA;AAAA;AAAA,YAAzB,CADH,GAEG,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjCD;;GAAMnB,W;;KAAAA,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport EpisodeCard from './EpisodeCard'\nimport GetPodcast from './GetPodcast'\nimport '../styles/GetEpisodes.css'\n\nconst podcastEndpoint =\n  'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'\n\n// const episodesEndpoint =\n//   'https://api.spotify.com/v1/shows/4Jgtgr4mHXNDyLldHkfEMz/episodes'\n\nlet episodesEndpoint = () => {\n  // this isn't working at the moment, but use the endpoint and sample showID and you can see results once taken out of the function\n\n  // define show id and use the podcast ID to get the different shows\n  // sample showID: 4Jgtgr4mHXNDyLldHkfEMz\n  let podcastId = GetPodcast.item.id\n  let showId = podcastId\n  return `https://api.spotify.com/v1/shows/${showId}/episodes`\n}\n\nconst GetEpisodes = () => {\n  const [token, setToken] = useState('')\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    if (localStorage.getItem('accessToken')) {\n      setToken(localStorage.getItem('accessToken'))\n    }\n  }, [])\n\n  const handleGetEpisodes = () => {\n    axios\n      .get(podcastEndpoint, {\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      })\n      .then((response) => {\n        setData(response.data)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching episodes', err)\n      })\n  }\n\n  return (\n    <div className=\"episodes-container\">\n      <button onClick={handleGetEpisodes}>Get Episodes</button>\n      {data?.items\n        ? data.items.map((item) => <EpisodeCard key={item.name} {...item} />)\n        : null}\n    </div>\n  )\n}\n\nexport default GetEpisodes\n"]},"metadata":{},"sourceType":"module"}