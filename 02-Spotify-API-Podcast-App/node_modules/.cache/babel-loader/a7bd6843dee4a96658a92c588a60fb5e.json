{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/lib/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResults({\n  passedSearchTerm\n}) {\n  _s();\n\n  const [state, setState] = useState({}); // let [state, setState] = useState({})\n\n  console.log(`This is the state: `, state);\n  console.log(`This is the setState: `, setState); // token is useful as allows us to call getSearchResults()\n\n  console.log(`This is the searchTerm`, {\n    passedSearchTerm\n  });\n  const token = localStorage.getItem('accessToken');\n\n  const getSearchResults = () => {\n    //converting the search string to a format spotify api is happy with\n    let string = {\n      passedSearchTerm\n    }.passedSearchTerm;\n\n    if (string) {\n      const searchTerm = string.split(' ').join('%20');\n      console.log(`This is the parsed search term: ðŸš¨`, searchTerm);\n      axios.get(`https://api.spotify.com/v1/search?q=${searchTerm}&type=show&market=US&limit=10&offset=5`, {\n        headers: {\n          Authorization: 'Bearer ' + token\n        }\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.error('there was an error fetching podcasts', err);\n      });\n    }\n\n    return null;\n  };\n\n  if (token) {\n    getSearchResults();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is where the search results would go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchResults, \"wc4FVGFDk/CrMM/4WhalkcDyeN4=\");\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/lib/SearchResults.js"],"names":["React","useState","useEffect","axios","SearchResults","passedSearchTerm","state","setState","console","log","token","localStorage","getItem","getSearchResults","string","searchTerm","split","join","get","headers","Authorization","then","response","data","catch","err","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA6C;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAD6C,CAI3C;;AACEO,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAb,EAAkCH,KAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb,EAAqCF,QAArC,EANyC,CAQ3C;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAb,EAAsC;AAAEJ,IAAAA;AAAF,GAAtC;AACA,QAAMK,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAd;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACA,QAAIC,MAAM,GAAG;AAAET,MAAAA;AAAF,MAAqBA,gBAAlC;;AACA,QAAIS,MAAJ,EAAY;AACV,YAAMC,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,KAAvB,CAAnB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAa,oCAAb,EAAkDM,UAAlD;AAEAZ,MAAAA,KAAK,CACFe,GADH,CAEK,uCAAsCH,UAAW,wCAFtD,EAGI;AACEI,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYV;AADpB;AADX,OAHJ,EASGW,IATH,CASSC,QAAD,IAAc;AAClBd,QAAAA,OAAO,CAACC,GAAR,CAAYa,QAAQ,CAACC,IAArB;AACD,OAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACdjB,QAAAA,OAAO,CAACkB,KAAR,CAAc,sCAAd,EAAsDD,GAAtD;AACD,OAdH;AAeD;;AACD,WAAO,IAAP;AACD,GAxBD;;AA0BA,MAAIf,KAAJ,EAAW;AACTG,IAAAA,gBAAgB;AACjB;;AAED,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA/CQT,a;;KAAAA,a;AAiDT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction SearchResults({ passedSearchTerm }) {\nconst [state, setState] = useState({})\n\n\n  // let [state, setState] = useState({})\n    console.log(`This is the state: `,state)\n    console.log(`This is the setState: `,setState)\n\n  // token is useful as allows us to call getSearchResults()\n  console.log(`This is the searchTerm`, { passedSearchTerm })\n  const token = localStorage.getItem('accessToken')\n\n  const getSearchResults = () => {\n    //converting the search string to a format spotify api is happy with\n    let string = { passedSearchTerm }.passedSearchTerm\n    if (string) {\n      const searchTerm = string.split(' ').join('%20')\n      console.log(`This is the parsed search term: ðŸš¨`, searchTerm)\n\n      axios\n        .get(\n          `https://api.spotify.com/v1/search?q=${searchTerm}&type=show&market=US&limit=10&offset=5`,\n          {\n            headers: {\n              Authorization: 'Bearer ' + token,\n            },\n          }\n        )\n        .then((response) => {\n          console.log(response.data)\n        })\n        .catch((err) => {\n          console.error('there was an error fetching podcasts', err)\n        })\n    }\n    return null\n  }\n\n  if (token) {\n    getSearchResults()\n  }\n\n  return (\n    <div>\n      <h1>This is where the search results would go</h1>\n    </div>\n  )\n}\n\nexport default SearchResults\n"]},"metadata":{},"sourceType":"module"}