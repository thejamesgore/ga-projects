{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/common/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchCard from '../components/SearchCard';\nimport '../styles/SearchPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchPage() {\n  _s();\n\n  const [searchAddress, setSearchAddress] = useState();\n  const [results, setResults] = useState({});\n  const token = localStorage.getItem('accessToken');\n\n  const handleSearch = () => {\n    const string = window.location.pathname.substring(9);\n    axios.get(`https://api.spotify.com/v1/search?q=${string}&type=show&market=US&limit=25&offset=0`, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      setResults(response.data.shows);\n    }).catch(err => {\n      console.error('there was an error fetching podcasts', err);\n    });\n    setSearchAddress(window.location.href);\n  };\n\n  console.log(`These are these are the search results back from the API`, results);\n  useEffect(() => {\n    handleSearch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page\",\n    children: (results === null || results === void 0 ? void 0 : results.items) ? results.items.map(item => /*#__PURE__*/_jsxDEV(SearchCard, { ...item\n    }, item[0], false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchPage, \"9jzzNXgXjvkPOtPgi/1yh10cS+s=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/common/SearchPage.js"],"names":["React","useState","useEffect","axios","SearchCard","SearchPage","searchAddress","setSearchAddress","results","setResults","token","localStorage","getItem","handleSearch","string","window","location","pathname","substring","get","headers","Authorization","then","response","data","shows","catch","err","console","error","href","log","items","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,0BAAP;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,EAAlD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAd;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,SAAzB,CAAmC,CAAnC,CAAf;AAEAf,IAAAA,KAAK,CACFgB,GADH,CAEK,uCAAsCL,MAAO,wCAFlD,EAGI;AACEM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYX;AADpB;AADX,KAHJ,EASGY,IATH,CASSC,QAAD,IAAc;AAClBd,MAAAA,UAAU,CAACc,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAV;AACD,KAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAc,sCAAd,EAAsDF,GAAtD;AACD,KAdH;AAeEpB,IAAAA,gBAAgB,CAACQ,MAAM,CAACC,QAAP,CAAgBc,IAAjB,CAAhB;AACD,GAnBH;;AAqBEF,EAAAA,OAAO,CAACG,GAAR,CAAa,0DAAb,EAAwEvB,OAAxE;AAEJN,EAAAA,SAAS,CAAC,MAAK;AAEXW,IAAAA,YAAY;AACf,GAHQ,EAGP,EAHO,CAAT;AAME,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACC,CAAAL,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEwB,KAAT,IACGxB,OAAO,CAACwB,KAAR,CAAcC,GAAd,CAAmBC,IAAD,iBAChB,QAAC,UAAD,OAA8BA;AAA9B,OAAiBA,IAAI,CAAC,CAAD,CAArB;AAAA;AAAA;AAAA;AAAA,YADF,CADH,GAIG;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;GA7CQ7B,U;;KAAAA,U;AA+CT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport SearchCard from '../components/SearchCard'\nimport '../styles/SearchPage.css'\n\nfunction SearchPage() {\n  const [searchAddress, setSearchAddress] = useState()\n  const [results, setResults] = useState({})\n  const token = localStorage.getItem('accessToken')\n\n    \n\n  const handleSearch = () => {\n    const string = window.location.pathname.substring(9)\n\n    axios\n      .get(\n        `https://api.spotify.com/v1/search?q=${string}&type=show&market=US&limit=25&offset=0`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      )\n      .then((response) => {\n        setResults(response.data.shows)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching podcasts', err)\n      })\n      setSearchAddress(window.location.href)\n    }\n\n    console.log(`These are these are the search results back from the API`, results)\n\nuseEffect(()=> {\n\n    handleSearch()\n},[])\n   \n\n  return (\n      <div className=\"results-page\">\n      {results?.items\n        ? results.items.map((item) => (\n            <SearchCard key={item[0]} {...item} />\n          ))\n        : null}\n        </div>\n  )\n}\n\nexport default SearchPage\n"]},"metadata":{},"sourceType":"module"}