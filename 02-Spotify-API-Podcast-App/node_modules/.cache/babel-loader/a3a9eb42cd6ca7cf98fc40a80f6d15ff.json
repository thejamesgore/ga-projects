{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/common/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SearchCard from '../components/SearchCard';\nimport '../styles/SearchPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchPage() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [results, setResults] = useState({});\n  const token = localStorage.getItem('accessToken');\n  useEffect(() => {\n    console.log(`This is the search term >>> `, window.location.pathname.substring(9).split(' ').join('%20'));\n  }, []);\n\n  const handleSearch = () => {\n    const string = searchTerm.split(' ').join('%20'); // const windowString = window.location.pathname.substring(9)\n\n    axios.get(`https://api.spotify.com/v1/search?q=${string}&type=show&market=US&limit=25&offset=0`, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      setResults(response.data.shows);\n    }).catch(err => {\n      console.error('there was an error fetching podcasts', err);\n    });\n  };\n\n  console.log(`These are these are the search results back from the API`, results);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fa fa-search search-main\",\n        id: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a podcast\",\n        className: \"search-bar search-main\",\n        spellcheck: \"false\",\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-info search-main\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fa fa-times search-main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-page\",\n      children: (results === null || results === void 0 ? void 0 : results.items) ? results.items.map(item => /*#__PURE__*/_jsxDEV(SearchCard, { ...item\n      }, item[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"G6Qx7ukWuwE8ERXFrlkd99gPU2A=\");\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/jamesgore/SEI/collab-projects/spotify-podcast-app/src/common/SearchPage.js"],"names":["React","useState","useEffect","axios","SearchCard","SearchPage","searchTerm","setSearchTerm","results","setResults","token","localStorage","getItem","console","log","window","location","pathname","substring","split","join","handleSearch","string","get","headers","Authorization","then","response","data","shows","catch","err","error","event","target","value","items","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,0BAAP;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAd;AAEAV,EAAAA,SAAS,CAAC,MAAM;AAEVW,IAAAA,OAAO,CAACC,GAAR,CAAa,8BAAb,EAA4CC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,KAAtC,CAA4C,GAA5C,EAAiDC,IAAjD,CAAsD,KAAtD,CAA5C;AAEL,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAGhB,UAAU,CAACa,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,KAA3B,CAAf,CADyB,CAEzB;;AAEAjB,IAAAA,KAAK,CACFoB,GADH,CAEK,uCAAsCD,MAAO,wCAFlD,EAGI;AACEE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYf;AADpB;AADX,KAHJ,EASGgB,IATH,CASSC,QAAD,IAAc;AAClBlB,MAAAA,UAAU,CAACkB,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAV;AACD,KAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACdlB,MAAAA,OAAO,CAACmB,KAAR,CAAc,sCAAd,EAAsDD,GAAtD;AACD,KAdH;AAgBC,GApBH;;AAqBElB,EAAAA,OAAO,CAACC,GAAR,CAAa,0DAAb,EAAwEN,OAAxE;AAIF,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,EAAE,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,sBAFd;AAGE,QAAA,SAAS,EAAC,wBAHZ;AAIE,QAAA,UAAU,EAAC,OAJb;AAKE,QAAA,QAAQ,EAAGyB,KAAD,IAAW;AACnB1B,UAAAA,aAAa,CAAC0B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAQ,QAAA,SAAS,EAAC,4BAAlB;AAA+C,QAAA,OAAO,EAAEd,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACC,CAAAb,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAE4B,KAAT,IACG5B,OAAO,CAAC4B,KAAR,CAAcC,GAAd,CAAmBC,IAAD,iBAChB,QAAC,UAAD,OAA8BA;AAA9B,SAAiBA,IAAI,CAAC,CAAD,CAArB;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAIG;AALJ;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAhEQjC,U;;KAAAA,U;AAkET,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport SearchCard from '../components/SearchCard'\nimport '../styles/SearchPage.css'\n\nfunction SearchPage() {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [results, setResults] = useState({})\n  const token = localStorage.getItem('accessToken')\n\n  useEffect(() => {\n    \n        console.log(`This is the search term >>> `, window.location.pathname.substring(9).split(' ').join('%20'))\n    \n  },[])\n\n  const handleSearch = () => {\n    const string = searchTerm.split(' ').join('%20')\n    // const windowString = window.location.pathname.substring(9)\n\n    axios\n      .get(\n        `https://api.spotify.com/v1/search?q=${string}&type=show&market=US&limit=25&offset=0`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      )\n      .then((response) => {\n        setResults(response.data.shows)\n      })\n      .catch((err) => {\n        console.error('there was an error fetching podcasts', err)\n      })\n\n    }\n    console.log(`These are these are the search results back from the API`, results)\n\n\n\n  return (\n    <div >\n      <div className=\"search-bar-container\">\n        <div className=\"fa fa-search search-main\" id=\"search-bar\"></div>\n        <input\n          type=\"text\"\n          placeholder=\"Search for a podcast\"\n          className=\"search-bar search-main\"\n          spellcheck=\"false\"\n          onChange={(event) => {\n            setSearchTerm(event.target.value)\n          }}\n        />\n        <button className=\"button is-info search-main\" onClick={handleSearch}>\n          Search\n        </button>\n        <div className=\"fa fa-times search-main\"></div>\n      </div>\n      \n      <div className=\"results-page\">\n      {results?.items\n        ? results.items.map((item) => (\n            <SearchCard key={item[0]} {...item} />\n          ))\n        : null}\n        </div>\n    </div>\n  )\n}\n\nexport default SearchPage\n"]},"metadata":{},"sourceType":"module"}